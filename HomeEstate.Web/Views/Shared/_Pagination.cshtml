@model IPagination

@if (Model.TotalPages > 1)
{
    <nav aria-label="Page navigation" class="d-flex justify-content-between align-items-center">
        <div>
            <small class="text-muted">
                Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) to @(Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalItems)) 
                of @Model.TotalItems results
            </small>
        </div>
        
        <ul class="pagination justify-content-center mb-0">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" href="#" onclick="loadPage(@(Model.CurrentPage - 1)); return false;" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">&laquo;</span>
                </li>
            }

            @{
                var startPage = Math.Max(1, Model.CurrentPage - 2);
                var endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
            }

            @if (startPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="#" onclick="loadPage(1); return false;">1</a>
                </li>
                @if (startPage > 2)
                {
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                }
            }

            @for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" href="#" onclick="loadPage(@i); return false;">@i</a>
                </li>
            }

            @if (endPage < Model.TotalPages)
            {
                @if (endPage < Model.TotalPages - 1)
                {
                    <li class="page-item disabled">
                        <span class="page-link">...</span>
                    </li>
                }
                <li class="page-item">
                    <a class="page-link" href="#" onclick="loadPage(@Model.TotalPages); return false;">@Model.TotalPages</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" href="#" onclick="loadPage(@(Model.CurrentPage + 1)); return false;" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">&raquo;</span>
                </li>
            }
        </ul>
    </nav>
}