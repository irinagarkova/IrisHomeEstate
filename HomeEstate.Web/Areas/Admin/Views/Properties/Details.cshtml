
@model AdminPropertyDetailsViewModel
@{
    ViewData["Title"] = "Property Details";
}

<div class="property-details-admin">
    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="mb-1">Property Details</h2>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Dashboard" asp-action="Index">Dashboard</a></li>
                    <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Properties" asp-action="Index">Properties</a></li>
                    <li class="breadcrumb-item active">Details</li>
                </ol>
            </nav>
        </div>
        <div>
            <a asp-area="Admin" asp-controller="Properties" asp-action="Index" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> Back to List
            </a>
        </div>
    </div>

    <!-- Property Status Card -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-left-primary">
                <div class="card-body">
                    <div class="row align-items-center">
                        <div class="col">
                            <h3 class="mb-2">@Model.Title</h3>
                            <div class="d-flex flex-wrap gap-2 mb-2">
                                @switch ((int)Model.ListingType)
                                {
                                    case 1:
                                        <span class="badge bg-success fs-6">For Sale</span>
                                        break;
                                    case 2:
                                        <span class="badge bg-info fs-6">For Rent</span>
                                        break;
                                    case 3:
                                        <span class="badge bg-primary fs-6">Sale & Rent</span>
                                        break;
                                }
                                <span class="badge bg-secondary">@Model.CategoryName</span>
                                <span class="badge bg-warning">@Model.PropertyType</span>
                            </div>
                            <p class="text-muted mb-0">
                                <i class="fas fa-map-marker-alt"></i> @Model.Location?.City, @Model.Location?.Address
                            </p>
                        </div>
                        <div class="col-auto">
                            <div class="text-end">
                                <div class="fs-2 fw-bold text-success">@Model.Price.ToString("C0")</div>
                                @if (Model.MonthlyRent.HasValue)
                                {
                                    <div class="fs-5">@Model.MonthlyRent.Value.ToString("C0")/month</div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Main Content Grid -->
    <div class="row">
        <!-- Left Column - Property Information -->
        <div class="col-lg-8">
            <!-- Property Images -->
            @if (Model.Images != null && Model.Images.Any())
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="fas fa-images me-2"></i>Property Images</h5>
                    </div>
                    <div class="card-body p-0">
                        <div id="propertyCarousel" class="carousel slide" data-bs-ride="carousel">
                            <div class="carousel-inner">
                                @for (int i = 0; i < Model.Images.Count; i++)
                                {
                                    <div class="carousel-item @(i == 0 ? "active" : "")">
                                        <img src="@Model.Images.ElementAt(i).ImageUrl" class="d-block w-100" alt="Property Image" style="height: 400px; object-fit: cover;">
                                    </div>
                                }
                            </div>
                            @if (Model.Images.Count > 1)
                            {
                                <button class="carousel-control-prev" type="button" data-bs-target="#propertyCarousel" data-bs-slide="prev">
                                    <span class="carousel-control-prev-icon"></span>
                                </button>
                                <button class="carousel-control-next" type="button" data-bs-target="#propertyCarousel" data-bs-slide="next">
                                    <span class="carousel-control-next-icon"></span>
                                </button>
                            }
                        </div>
                        <!-- Thumbnails -->
                        @if (Model.Images.Count > 1)
                        {
                            <div class="p-3">
                                <div class="row g-2">
                                    @for (int i = 0; i < Math.Min(Model.Images.Count, 6); i++)
                                    {
                                        <div class="col-2">
                                            <img src="@Model.Images.ElementAt(i).ImageUrl" 
                                                 class="img-fluid rounded cursor-pointer thumbnail-img @(i == 0 ? "border border-primary border-2" : "")" 
                                                 onclick="changeSlide(@i)"
                                                 style="height: 60px; object-fit: cover;">
                                        </div>
                                    }
                                    @if (Model.Images.Count > 6)
                                    {
                                        <div class="col-2">
                                            <div class="bg-secondary text-white rounded d-flex align-items-center justify-content-center" style="height: 60px;">
                                                +@(Model.Images.Count - 6)
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }

            <!-- Property Description -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-file-alt me-2"></i>Description</h5>
                </div>
                <div class="card-body">
                    <p class="mb-0">@Html.Raw(Model.Description.Replace("\n", "<br>"))</p>
                </div>
            </div>

            <!-- Property Features -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-list me-2"></i>Property Features</h5>
                </div>
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="feature-item">
                                <i class="fas fa-expand-arrows-alt text-primary me-2"></i>
                                <strong>Area:</strong> @Model.Area m²
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="feature-item">
                                <i class="fas fa-bed text-primary me-2"></i>
                                <strong>Type:</strong> @Model.PropertyType
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="feature-item">
                                <i class="fas fa-calendar text-primary me-2"></i>
                                <strong>Listed:</strong> @Model.CreatedOn.ToString("MMM dd, yyyy")
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="feature-item">
                                <i class="fas fa-heart text-primary me-2"></i>
                                <strong>Favorites:</strong> @Model.FavoriteCount
                            </div>
                        </div>

                        @if (Model.ListingType == HomeEstate.Data.Models.Enum.PropertyListingType.Rent || Model.ListingType == HomeEstate.Data.Models.Enum.PropertyListingType.Both)
                        {
                            @if (Model.IsFurnished)
                            {
                                <div class="col-md-6">
                                    <div class="feature-item">
                                        <i class="fas fa-couch text-success me-2"></i>
                                        <strong>Furnished</strong>
                                    </div>
                                </div>
                            }
                            @if (Model.PetsAllowed)
                            {
                                <div class="col-md-6">
                                    <div class="feature-item">
                                        <i class="fas fa-paw text-warning me-2"></i>
                                        <strong>Pet Friendly</strong>
                                    </div>
                                </div>
                            }
                            @if (Model.IsParking)
                            {
                                <div class="col-md-6">
                                    <div class="feature-item">
                                        <i class="fas fa-car text-info me-2"></i>
                                        <strong>Parking Available</strong>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>

            <!-- Rental Information (if applicable) -->
            @if (Model.ListingType == HomeEstate.Data.Models.Enum.PropertyListingType.Rent || Model.ListingType == HomeEstate.Data.Models.Enum.PropertyListingType.Both)
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="fas fa-key me-2"></i>Rental Information</h5>
                    </div>
                    <div class="card-body">
                        <div class="row g-3">
                            @if (Model.MonthlyRent.HasValue)
                            {
                                <div class="col-md-6">
                                    <div class="rental-info-item">
                                        <strong>Monthly Rent:</strong>
                                        <span class="text-success fs-5">@Model.MonthlyRent.Value.ToString("C0")</span>
                                    </div>
                                </div>
                            }
                            @if (Model.SecurityDeposit.HasValue)
                            {
                                <div class="col-md-6">
                                    <div class="rental-info-item">
                                        <strong>Security Deposit:</strong>
                                        <span>@Model.SecurityDeposit.Value.ToString("C0")</span>
                                    </div>
                                </div>
                            }
                            @if (Model.MinimumLeasePeriod.HasValue)
                            {
                                <div class="col-md-6">
                                    <div class="rental-info-item">
                                        <strong>Min. Lease Period:</strong>
                                        <span>@Model.MinimumLeasePeriod months</span>
                                    </div>
                                </div>
                            }
                            @if (Model.AvailableFrom.HasValue)
                            {
                                <div class="col-md-6">
                                    <div class="rental-info-item">
                                        <strong>Available From:</strong>
                                        <span>@Model.AvailableFrom.Value.ToString("MMM dd, yyyy")</span>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Right Column - Owner & Admin Actions -->
        <div class="col-lg-4">
            <!-- Owner Information -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-user me-2"></i>Property Owner</h5>
                </div>
                <div class="card-body">
                    <div class="d-flex align-items-center mb-3">
                        <div class="owner-avatar me-3">
                            <div class="avatar-circle bg-primary text-white">
                                @(Model.Owner?.UserName?.Substring(0, 1).ToUpper() ?? "U")
                            </div>
                        </div>
                        <div>
                            <h6 class="mb-1">@(Model.Owner?.UserName ?? "Unknown User")</h6>
                            <small class="text-muted">Property Owner</small>
                        </div>
                    </div>
                    
                    <div class="owner-details">
                        <div class="mb-2">
                            <i class="fas fa-envelope text-muted me-2"></i>
                            <span>@(Model.Owner?.Email ?? "N/A")</span>
                        </div>
                        <div class="mb-2">
                            <i class="fas fa-phone text-muted me-2"></i>
                            <span>@(Model.Owner?.PhoneNumber ?? "N/A")</span>
                        </div>
                        <div class="mb-2">
                            <i class="fas fa-id-card text-muted me-2"></i>
                            <span>ID: @Model.Owner?.Id</span>
                        </div>
                    </div>

                    <hr>

                    <div class="d-grid gap-2">
                        <a asp-area="Admin" asp-controller="Users" asp-action="Details" asp-route-id="@Model.Owner?.Id" 
                           class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-user"></i> View Owner Profile
                        </a>
                        <a href="mailto:@(Model.Owner?.Email)" class="btn btn-outline-secondary btn-sm">
                            <i class="fas fa-envelope"></i> Send Email
                        </a>
                    </div>
                </div>
            </div>

            <!-- Admin Actions -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-cogs me-2"></i>Admin Actions</h5>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        <a href="/Property/Details/@Model.Id" target="_blank" class="btn btn-info btn-sm">
                            <i class="fas fa-external-link-alt"></i> View Public Page
                        </a>
                        <button type="button" class="btn btn-warning btn-sm" onclick="togglePropertyStatus(@Model.Id)">
                            <i class="fas fa-eye"></i> Toggle Visibility
                        </button>
                        <button type="button" class="btn btn-danger btn-sm" onclick="showDeleteModal(@Model.Id, '@Model.Title')">
                            <i class="fas fa-trash"></i> Delete Property
                        </button>
                    </div>
                </div>
            </div>

            <!-- Property Statistics -->
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-chart-bar me-2"></i>Statistics</h5>
                </div>
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-6">
                            <div class="stat-box">
                                <div class="stat-number text-danger">@Model.FavoriteCount</div>
                                <div class="stat-label">Favorites</div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="stat-box">
                                <div class="stat-number text-info">@((DateTime.Now - Model.CreatedOn).Days)</div>
                                <div class="stat-label">Days Listed</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle"></i>
                    <strong>Warning!</strong> This action cannot be undone.
                </div>
                <p>Are you sure you want to delete this property?</p>
                <div id="deletePropertyInfo"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete Property</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function changeSlide(index) {
            // Remove active class from all thumbnails
            document.querySelectorAll('.thumbnail-img').forEach(thumb => {
                thumb.classList.remove('border', 'border-primary', 'border-2');
            });
            
            // Add active class to clicked thumbnail
            document.querySelectorAll('.thumbnail-img')[index].classList.add('border', 'border-primary', 'border-2');
            
            // Change carousel to selected slide
            const carousel = new bootstrap.Carousel(document.getElementById('propertyCarousel'));
            carousel.to(index);
        }

        function showDeleteModal(propertyId, propertyTitle) {
            document.getElementById('deletePropertyInfo').innerHTML = `
                <div class="p-3 bg-light rounded">
                    <strong>Property:</strong> ${propertyTitle}<br>
                    <strong>ID:</strong> ${propertyId}
                </div>
            `;

            document.getElementById('confirmDeleteBtn').onclick = () => deleteProperty(propertyId);
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }

        function deleteProperty(propertyId) {
            fetch(`@Url.Action("DeleteAjax", "Properties", new { area = "Admin" })`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({ id: propertyId })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showToast(data.message, 'success');
                    bootstrap.Modal.getInstance(document.getElementById('deleteModal')).hide();
                    setTimeout(() => {
                        window.location.href = '@Url.Action("Index", "Properties", new { area = "Admin" })';
                    }, 1500);
                } else {
                    showToast(data.message, 'danger');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showToast('Error deleting property', 'danger');
            });
        }

        function togglePropertyStatus(propertyId) {
            // Implementation for toggling property visibility/status
            showToast('Feature coming soon', 'info');
        }

        function showToast(message, type) {
            const toast = document.createElement('div');
            toast.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
            toast.style.cssText = `
                top: 20px;
                right: 20px;
                z-index: 9999;
                min-width: 300px;
                box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            `;
            toast.innerHTML = `
                <i class="fas fa-${type === 'success' ? 'check-circle' : type === 'danger' ? 'exclamation-circle' : 'info-circle'} me-2"></i>
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;

            document.body.appendChild(toast);

            setTimeout(() => {
                if (toast.parentNode) {
                    const bsAlert = new bootstrap.Alert(toast);
                    bsAlert.close();
                }
            }, 5000);
        }
    </script>
    @Html.AntiForgeryToken()
}

<style>
    .property-details-admin .owner-avatar {
        width: 50px;
        height: 50px;
    }

    .avatar-circle {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        font-size: 20px;
    }

    .feature-item {
        padding: 8px 0;
        border-bottom: 1px solid #f0f0f0;
    }

    .feature-item:last-child {
        border-bottom: none;
    }

    .rental-info-item {
        padding: 8px 0;
    }

    .stat-box {
        padding: 10px;
        border-radius: 8px;
        background: #f8f9fa;
    }

    .stat-number {
        font-size: 1.5rem;
        font-weight: 700;
    }

    .stat-label {
        font-size: 0.8rem;
        color: #6c757d;
        text-transform: uppercase;
    }

    .cursor-pointer {
        cursor: pointer;
    }

    .border-left-primary {
        border-left: 4px solid #4e73df !important;
    }
</style>